import React, { useEffect, useState } from 'react';
import { Container, Typography, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, CircularProgress, Alert } from '@mui/material';
import { fetchReports } from '../services/api';

export default function Reports() {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    setLoading(true);
    fetchReports()
      .then(data => {
        setReports(data);
        setLoading(false);
      })
      .catch(() => {
        setError('Failed to load reports');
        setLoading(false);
      });
  }, []);

  if (loading) return <Container sx={{ mt: 4 }}><CircularProgress /></Container>;

  if (error) return <Container sx={{ mt: 4 }}><Alert severity="error">{error}</Alert></Container>;

  return (
    <Container sx={{ mt: 4 }}>
      <Typography variant="h4" gutterBottom>
        Experiment Reports
      </Typography>
      {reports.length === 0 ? (
        <Typography>No reports found.</Typography>
      ) : (
        <TableContainer component={Paper}>
          <Table aria-label="reports table">
            <TableHead>
              <TableRow>
                <TableCell>ID</TableCell>
                <TableCell>Experiment</TableCell>
                <TableCell>Framework</TableCell>
                <TableCell>Status</TableCell>
                <TableCell>Verdict</TableCell>
                <TableCell>Resilience Score</TableCell>
                <TableCell>Start Time</TableCell>
                <TableCell>End Time</TableCell>
                <TableCell>Details</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {reports.map((report) => (
                <TableRow key={report.id}>
                  <TableCell>{report.id}</TableCell>
                  <TableCell>{report.experiment}</TableCell>
                  <TableCell>{report.framework}</TableCell>
                  <TableCell>{report.status}</TableCell>
                  <TableCell>{report.verdict}</TableCell>
                  <TableCell>{report.resilience_score.toFixed(2)}</TableCell>
                  <TableCell>{new Date(report.start_time).toLocaleString()}</TableCell>
                  <TableCell>{new Date(report.end_time).toLocaleString()}</TableCell>
                  <TableCell>{report.details}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      )}
    </Container>
  );
}
